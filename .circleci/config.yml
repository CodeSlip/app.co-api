version: 2 # use CircleCI 2.0
jobs: # a collection of steps
  build: # runs not using Workflows must have a `build` job as entry point
    working_directory: ~/mern-starter # directory where steps will run
    docker: # run the steps with Docker
      - image: circleci/node:10.15.2 # ...with this image as the primary container; this is where all `steps` will run
      - image: circleci/postgres:9.6-alpine # and this image as the secondary service container
        environment:
          POSTGRES_USER: circleci
          POSTGRES_DB: app_co_test
    steps: # a collection of executable commands
      - checkout # special step to check out source code to working directory
      - restore_cache: # special step to restore the dependency cache
          # Read about caching dependencies: https://circleci.com/docs/2.0/caching/
          key: yarn-packages-{{ checksum "package.json" }}
      - run:
          name: Install Dependencies
          command: yarn install --frozen-lockfile
      - save_cache: # special step to save the dependency cache
          key: yarn-packages-{{ checksum "package.json" }}
          paths:
            - ./.cache/yarn
      - run:
          name: setup ENV
          command: export DATABASE_URL="postgres://circleci@localhost:5432/app_co_test"
      # - run: # run tests
      #     name: create DB
      #     command: NODE_ENV=test-circleci yarn sequelize db:create
      - run:
          name: 'migrate DB'
          command: NODE_ENV=test-circleci yarn db:migrate
      - run: # run tests
          name: test
          command: NODE_ENV=test-circleci yarn jest --forceExit
      # - run: # run coverage report
      #     name: code-coverage
      #     command: './node_modules/.bin/nyc report --reporter=text-lcov'
      # - run: # run lint
      #     name: lint
      #     command: yarn eslint
      - store_artifacts: # special step to save test results as as artifact
          # Upload test summary for display in Artifacts: https://circleci.com/docs/2.0/artifacts/ 
          path: test-results.xml
          prefix: tests
      - store_artifacts: # for display in Artifacts: https://circleci.com/docs/2.0/artifacts/ 
          path: coverage
          prefix: coverage
      - store_test_results: # for display in Test Summary: https://circleci.com/docs/2.0/collect-test-data/
          path: test-results.xml
      # See https://circleci.com/docs/2.0/deployment-integrations/ for deploy examples